# Translations template for PROJECT.
# Copyright (C) 2019 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2019-11-10 01:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

msgid "Reducing Noise"
msgstr "-- Reducing Noise"

msgid "When performing a final render, it is important to reduce noise as much as possible. Here we will discuss a number of tricks that, while breaking the laws of physics, are particularly important when rendering animations within a reasonable time. Click to enlarge the example images to see the noise differences well."
msgstr "When performing a Kết Thúc/Kết Cục/Cuối Cùng Kết Xuất, it is important Tới reduce Nhiễu as much as possible. Here we will discuss a Số of tricks that, while breaking the laws of Vật Lý, are particularly important when Kết Xuất -- Render Hoạt Họa within a reasonable Thời Gian. Bấm Chuột Tới enlarge the Ví Dụ -- Example Hình Ảnh Tới see the Nhiễu differences well."

msgid "Path Tracing"
msgstr "Dò Đường Đi -- Path Tracing"

msgid "Cycles uses path tracing with next event estimation, which is not good at rendering all types of light effects, like caustics, but has the advantage of being able to render more detailed and larger scenes compared to some other rendering algorithms. This is because we do not need to store, for example, a photon map in memory, and because we can keep rays relatively coherent to use an on-demand image cache, compared to e.g. bidirectional path tracing."
msgstr "Tuần Hoàn -- Cycles uses Đường/Đi/Dẫn tracing với Tiếp Theo event estimation, cái mà/tức is Đảo Nghịch Tốt Tại Kết Xuất -- Render Toàn Bộ Thể Loại -- Types of Nguồn/Ánh Sáng Hiệu Ứng, like Tụ Quang, but has the advantage of being able Tới Kết Xuất Nhiều/Lớn Hơn detailed và larger Cảnh compared Tới some Cái/Sắp Đặt Khác Kết Xuất -- Render algorithms. cái/điều này is because we làm Đảo Nghịch need Tới store, for Ví Dụ -- Example, a photon Ánh Xạ Vào Bộ Nhớ, và because we có thể -- Keep rays relatively coherent Tới Sử Dụng an on-demand Hình Ảnh Bộ Nhớ Đệm, compared Tới e.g. bidirectional Đường/Đi/Dẫn tracing."

msgid "We do the inverse of what reality does, tracing light rays from the camera into the scene and onto lights, rather than from the light sources into the scene and then into the camera. This has the advantage that we do not waste light rays that will not end up in the camera, but also means that it is difficult to find some light paths that may contribute a lot. Light rays will be sent either according to the surface BRDF, or in the direction of known light sources."
msgstr "We làm the Đảo Nghịch of cái gì reality does, tracing Nguồn/Ánh Sáng rays Từ the Máy Quay Phim into the Cảnh và onto Nguồn/Ánh Sáng, rather than Từ the Nguồn/Ánh Sáng sources into the Cảnh và then into the Máy Quay Phim. cái/điều này has the advantage that we làm Đảo Nghịch waste Nguồn/Ánh Sáng rays that will Đảo Nghịch Kết Thúc -- End Lên/Trên Vào the Máy Quay Phim, but also means that it is difficult Tới Lùng Tìm some Nguồn/Ánh Sáng Đường Dẫn that may Đóng Góp -- Contribute a lot. Nguồn/Ánh Sáng rays will be sent either according Tới the Bề Mặt BRDF, hoặc Vào the Chiều Hướng of known Nguồn/Ánh Sáng sources."

msgid "For more details, see the :doc:`Light Paths </render/cycles/render_settings/light_paths>` and :doc:`Sampling </render/cycles/render_settings/sampling>` documentation."
msgstr "For more details, see the :doc:`Light Paths </render/cycles/settings/scene/render/light_paths>` and :doc:`Integrator </render/cycles/settings/scene/render/integrator>` documentation."

msgid "Where Noise Comes From"
msgstr "-- Where Noise Comes From"

msgid "To understand where noise can come from, take for example the scene below. When we trace a light ray into the location marked by the white circle on a red dot, the second image below gives an impression of what the diffuse shader \"sees\"."
msgstr "Tới understand where Nhiễu có thể come Từ, take for Ví Dụ -- Example the Cảnh below. When we -- Trace a Nguồn/Ánh Sáng ray into the vị trí marked by the Màu Trắng Hình/Vòng/Tròn BẬT a Đỏ Tích Vô Hướng, the Thứ Hai Hình Ảnh below gives an impression of cái gì the Khuếch Tán Bộ Tô Bóng \"sees\"."

msgid "To find the light that is reflected from this surface, we need to find the average color from all these pixels. Note the glossy highlight on the sphere, and the bright spot the light casts on the nearby wall. These hotspots are 100x brighter than other parts of the image and will contribute significantly to the lighting of this pixel."
msgstr "Tới Lùng Tìm the Nguồn/Ánh Sáng that is reflected Từ cái/điều này Bề Mặt, we need Tới Lùng Tìm the Trung Bình Hóa Màu Sắc Từ Toàn Bộ these Điểm Ảnh. Ghi Chú the Bóng Bẩy Nêu Bật/Điểm Nhấn BẬT the Hình Cầu, và the Độ Sáng Đèn Rọi the Nguồn/Ánh Sáng casts BẬT the nearby Tường. These hotspots are 100x brighter than Cái/Sắp Đặt Khác parts of the Hình Ảnh và will Đóng Góp -- Contribute significantly Tới the Bố Trí Ánh Sáng of cái/điều này Điểm Ảnh."

msgid "The scene."
msgstr "The Cảnh."

msgid "Irradiance at the shading point."
msgstr "Irradiance Tại the Tô Bóng Điểm/Chấm."

msgid "The detected highlights."
msgstr "The detected Điểm Nhấn."

msgid "The light is a known light source, so its location is already known, but the glossy highlight(s) that it causes are a different matter. The best we can do with path tracing is to distribute light rays randomly over the hemisphere, hoping to find all the important bright spots. If for some pixels we miss some bright spot, but we do find it for another, that results in noise. The more samples we take, the higher the probability that we cover all the important sources of light."
msgstr "The Nguồn/Ánh Sáng is a known Nguồn/Ánh Sáng Nguồn, so its vị trí is already known, but the Bóng Bẩy Nêu Bật/Điểm Nhấn(s) that it causes are a khác matter. The best we có thể làm với Đường/Đi/Dẫn tracing is Tới distribute Nguồn/Ánh Sáng rays randomly over the hemisphere, hoping Tới Lùng Tìm Toàn Bộ the important Độ Sáng spots. If for some Điểm Ảnh we miss some Độ Sáng Đèn Rọi, but we làm Lùng Tìm it for another, that results Vào Nhiễu. The Nhiều/Lớn Hơn Lượng Mẫu Vật we take, the higher the probability that we cover Toàn Bộ the important sources of Nguồn/Ánh Sáng."

msgid "With some tricks we can reduce this noise. If we blur the bright spots, they become bigger and less intense, making them easier to find and less noisy. This will not give the same exact result, but often it's close enough when viewed through a diffuse or soft glossy reflection. Below is an example of using :ref:`Glossy Filter <render-cycles-integrator-filter-glossy>` and :doc:`Light Falloff </render/shader_nodes/color/light_falloff>`."
msgstr "With some tricks we can reduce this noise. If we blur the bright spots, they become bigger and less intense, making them easier to find and less noisy. This will not give the same exact result, but often it's close enough when viewed through a diffuse or soft glossy reflection. Below is an example of using :ref:`Glossy Filter <render-cycles-integrator-filter-glossy>` and :doc:`Light Falloff </render/cycles/nodes/types/color/light_falloff>`."

msgid "Using Glossy Filter & Light Falloff."
msgstr "Using Bóng Bẩy Bộ/Thanh Lọc & Nguồn/Ánh Sáng Suy Giảm Dần."

msgid "Bounces"
msgstr "Lượng Bật Nảy -- Bounces"

msgid "In reality light will bounce a huge number of times due to the speed of light being very high. In practice more bounces will introduce more noise, and it might be good to use something like the Limited Global Illumination preset in the :ref:`Light Paths <render-cycles-integrator-light-paths>` Section that uses *fewer* bounces for different shader types. Diffuse surfaces typically can get away with fewer bounces, while glossy surfaces need a few more, and transmission shaders such as glass usually need the most."
msgstr "Vào reality Nguồn/Ánh Sáng will Nẩy a huge Số of times due Tới the Tốc Độ of Nguồn/Ánh Sáng being very Cao. Vào practice Nhiều/Lớn Hơn Lượng Bật Nảy -- Bounces will introduce Nhiều/Lớn Hơn Nhiễu, và it might be Tốt Tới Sử Dụng something like the Limited Toàn Cầu Illumination Sắp Đặt Sẵn Vào the :ref:`Nguồn/Ánh Sáng Đường Dẫn <render-cycles-integrator-Nguồn/Ánh Sáng-paths>` Section that uses *fewer* Lượng Bật Nảy -- Bounces for khác Bộ Tô Bóng Thể Loại -- Types. Khuếch Tán Bề Mặt typically có thể get away với fewer Lượng Bật Nảy -- Bounces, while Bóng Bẩy Bề Mặt need a few Nhiều/Lớn Hơn, và Truyền Xạ Bộ Tô Bóng -- Shaders such as glass usually need the most."

msgid "No bounces."
msgstr "No Lượng Bật Nảy -- Bounces."

msgid "Two bounces at max."
msgstr "hai Lượng Bật Nảy -- Bounces Tại Tối Đa."

msgid "Four bounces at max."
msgstr "bốn Lượng Bật Nảy -- Bounces Tại Tối Đa."

msgid "Also important is to use shader colors that do **not** have components of value 1.0 or values near that; try to keep the maximum value to 0.8 or less and make your lights brighter. In reality, surfaces are rarely perfectly reflecting all light, but there are of course exceptions; usually glass will let most light through, which is why we need more bounces there. High values for the color components tend to introduce noise because light intensity then does not decrease much as it bounces off each surface."
msgstr "Also important is Tới Sử Dụng Bộ Tô Bóng Màu Sắc that làm **Đảo Nghịch** have components of Giá Trị 1.0 hoặc Giá Trị Gần that; try Tới -- Keep the Tối Đa Giá Trị Tới 0.8 hoặc Ít/Nhỏ Hơn và Tạo your Nguồn/Ánh Sáng brighter. Vào reality, Bề Mặt are rarely perfectly reflecting Toàn Bộ Nguồn/Ánh Sáng, but there are of course exceptions; usually glass will let most Nguồn/Ánh Sáng through, cái mà/tức is why we need Nhiều/Lớn Hơn Lượng Bật Nảy -- Bounces there. Cao Giá Trị for the Màu Sắc components tend Tới introduce Nhiễu because Nguồn/Ánh Sáng Cường Độ then does Đảo Nghịch decrease much as it Lượng Bật Nảy -- Bounces TẮT each Bề Mặt."

msgid "Caustics and Filter Glossy"
msgstr "-- Caustics and Filter Glossy"

msgid "Caustics are a well-known source of noise, causing fireflies. They happen because the renderer has difficulty finding specular highlights viewed through a soft glossy or diffuse reflection. There is a :ref:`No Caustics <render-cycles-integrator-no-caustics>` option to disable glossy behind a diffuse reflection entirely. Many renderers will typically disable caustics by default."
msgstr "Tụ Quang are a well-known Nguồn of Nhiễu, causing fireflies. They happen because the renderer has difficulty finding Lóng Lánh Điểm Nhấn viewed through a Mềm Bóng Bẩy hoặc Khuếch Tán Phản Quang. There is a :ref:`No Tụ Quang <render-cycles-integrator-no-Tụ Quang>` Tùy Chọn Tới Tắt Bóng Bẩy behind a Khuếch Tán Phản Quang entirely. Many renderers will typically Tắt Tụ Quang by Mặc Định."

msgid "Default settings."
msgstr "Mặc Định Sắp Đặt."

msgid "Caustics disabled."
msgstr "Tụ Quang Tắt."

msgid "Filter Glossy greater than zero."
msgstr "Bộ/Thanh Lọc Bóng Bẩy Lớn Hơn than zero."

msgid "However, using No Caustics will result in missing light, and it still does not cover the case where a sharp glossy reflection is viewed through a soft glossy reflection. There is a :ref:`Filter Glossy <render-cycles-integrator-filter-glossy>` option to reduce the noise from such cases at the cost of accuracy. This will blur the sharp glossy reflection to make it easier to find, by increasing the shader Roughness."
msgstr "However, using No Tụ Quang will Kết Quả Vào Còn thiếu Nguồn/Ánh Sáng, và it still does Đảo Nghịch cover the Kiểu Chữ where a Sắc/Nhọn Bóng Bẩy Phản Quang is viewed through a Mềm Bóng Bẩy Phản Quang. There is a :ref:`Bộ/Thanh Lọc Bóng Bẩy <render-cycles-integrator-filter-Bóng Bẩy>` Tùy Chọn Tới reduce the Nhiễu Từ such cases Tại the cost of Độ Chính Xác. cái/điều này will Làm Mờ the Sắc/Nhọn Bóng Bẩy Phản Quang Tới Tạo it easier Tới Lùng Tìm, by increasing the Bộ Tô Bóng Độ Nhám/Ráp/Rối."

msgid "The above images show default settings, no caustics, and filter glossy set to 1.0."
msgstr "The above Hình Ảnh Hiển Thị Mặc Định Sắp Đặt, no Tụ Quang, và Bộ/Thanh Lọc Bóng Bẩy Đặt Tới 1.0."

msgid "Light Falloff"
msgstr "Suy Giảm của Ánh Sáng -- Light Falloff"

msgid "In reality light in a vacuum will always fall off at a rate of 1/(distance^2). However, as distance goes to zero, this value goes to infinity and we can get very bright spots in the image. These are mostly a problem for indirect lighting, where the probability of hitting such a small but extremely bright spot is low and so happens only rarely. This is a typical recipe for fireflies."
msgstr "Vào reality Nguồn/Ánh Sáng Vào a vacuum will Luôn Luôn fall TẮT Tại a Tốc Độ of 1/(Khoảng Cách^2). However, as Khoảng Cách goes Tới zero, cái/điều này Giá Trị goes Tới infinity và we có thể get very Độ Sáng spots Vào the Hình Ảnh. These are mostly a problem for Gián Tiếp Bố Trí Ánh Sáng, where the probability of hitting such a Nhỏ but extremely Độ Sáng Đèn Rọi is Thấp và so happens only rarely. cái/điều này is a typical recipe for fireflies."

msgid "Hard Falloff."
msgstr "Cứng Suy Giảm Dần."

msgid "Soft Falloff."
msgstr "Mềm Suy Giảm Dần."

msgid "To reduce this problem, the :doc:`Light Falloff </render/shader_nodes/color/light_falloff>` node has a *Smooth factor*, that can be used to reduce the maximum intensity a light can contribute to nearby surfaces. The images above show default falloff and smooth value 1.0."
msgstr "To reduce this problem, the :doc:`Light Falloff </render/cycles/nodes/types/color/light_falloff>` node has a *Smooth factor*, that can be used to reduce the maximum intensity a light can contribute to nearby surfaces. The images above show default falloff and smooth value 1.0."

msgid "Multiple Importance Sampling"
msgstr "Lấy Mẫu Vật Đa Trọng -- Multiple Importance Sampling"

msgid "Materials with emission shaders can be configured to use Multiple Importance Sampling (:doc:`/render/cycles/material_settings`). This means that they will get rays sent directly towards them, rather than ending up there based on rays randomly bouncing around. For very bright mesh light sources, this can reduce noise significantly. However, when the emission is not particularly bright, this will take samples away from other brighter light sources for which it is important to find them this way."
msgstr "Materials with emission shaders can be configured to use Multiple Importance Sampling (:doc:`/render/cycles/materials/settings`). This means that they will get rays sent directly towards them, rather than ending up there based on rays randomly bouncing around. For very bright mesh light sources, this can reduce noise significantly. However, when the emission is not particularly bright, this will take samples away from other brighter light sources for which it is important to find them this way."

msgid "The optimal setting here is difficult to guess; it may be a matter of trial and error, but often it is clear that a somewhat glowing object may be only contributing light locally, while a mesh light used as a light would need this option enabled. Here is an example where the emissive spheres contribute little to the lighting, and the image renders with slightly less noise by disabling Multiple Importance on them."
msgstr "The optimal setting here is difficult Tới guess; it may be a matter of trial và Lỗi/Sai Số, but often it is Xóa that a somewhat glowing Vật Thể may be only Đóng Góp Nguồn/Ánh Sáng locally, while a Khung Lưới Nguồn/Ánh Sáng sử dụng as a Nguồn/Ánh Sáng would need cái/điều này Tùy Chọn Bật. Here is an Ví Dụ -- Example where the Phát Quang spheres Đóng Góp -- Contribute little Tới the Bố Trí Ánh Sáng, và the Hình Ảnh renders với slightly Ít/Nhỏ Hơn Nhiễu by disabling Multiple Importance BẬT them."

msgid "Multiple Importance off."
msgstr "Multiple Importance TẮT."

msgid "Multiple Importance on."
msgstr "Multiple Importance BẬT."

msgid "The world background also has a *Multiple Importance* (:ref:`render-cycles-integrator-world-settings`) option. This is mostly useful for environment maps that have small bright spots in them, rather than being smooth. This option will then, in a preprocess, determine the bright spots, and send light rays directly towards them. Again, enabling this option may take samples away from more important light sources if it is not needed."
msgstr "The Thế Giới Màu/Ảnh/Nền also has a *Multiple Importance* (:ref:`render-cycles-integrator-Thế Giới-settings`) Tùy Chọn. cái/điều này is mostly useful for Môi Trường maps that have Nhỏ Độ Sáng spots Vào them, rather than being Làm Mịn/Trơn Tru. cái/điều này Tùy Chọn will then, Vào a preprocess, determine the Độ Sáng spots, và send Nguồn/Ánh Sáng rays directly towards them. Again, enabling cái/điều này Tùy Chọn may take Lượng Mẫu Vật away Từ Nhiều/Lớn Hơn important Nguồn/Ánh Sáng sources if it is Đảo Nghịch needed."

msgid "Glass and Transparent Shadows"
msgstr "-- Glass and Transparent Shadows"

msgid "With caustics disabled, glass will miss shadows, and with filter glossy they might be too soft. We can make a glass shader that will use a Glass BSDF when viewed *directly*, and a Transparent BSDF when viewed *indirectly*. The Transparent BSDF can be used for transparent shadows to find light sources straight through surfaces, and will give properly-colored shadows, but without the caustics. The Light Path node is used to determine when to use which of the two shaders."
msgstr "với Tụ Quang Tắt, glass will miss Bóng Tối, và với Bộ/Thanh Lọc Bóng Bẩy they might be too Mềm. We có thể Tạo a glass Bộ Tô Bóng that will Sử Dụng a Glass BSDF when viewed *directly*, và a Trong Suốt BSDF when viewed *indirectly*. The Trong Suốt BSDF có thể be sử dụng for Trong Suốt Bóng Tối Tới Lùng Tìm Nguồn/Ánh Sáng sources Thẳng through Bề Mặt, và will give properly-colored Bóng Tối, but without the Tụ Quang. The Nguồn/Ánh Sáng Đường/Đi/Dẫn Nút is sử dụng Tới determine when Tới Sử Dụng cái mà/tức of the hai Bộ Tô Bóng -- Shaders."

msgid "Optimized glass shader."
msgstr "Optimized glass Bộ Tô Bóng."

msgid "Above we can see the node setup used for the glass transparency trick; on the left the render has too much shadow due to missing caustics, and on the right the render with the trick."
msgstr "Above we có thể see the Nút Sắp Đặt -- Setup sử dụng for the glass Độ Trong trick; BẬT the trái the Kết Xuất has too much Ngả/Bóng Tối due Tới Còn thiếu Tụ Quang, và BẬT the phải the Kết Xuất với the trick."

msgid "Default Glas BSDF."
msgstr "Mặc Định Glas BSDF."

msgid "Optimized Glass Shader."
msgstr "Optimized Glass Bộ Tô Bóng."

msgid "Light Portals"
msgstr "-- Light Portals"

msgid "When rendering a daylight indoor scene where most of the light is coming in through a window or door opening, it is difficult for the integrator to find its way to them. To fix this, use :ref:`Light Portals <render-cycles-lights-area-portals>`. You then will need to modify its shape to match that of the opening that you are trying to fill."
msgstr "When rendering a daylight indoor scene where most of the light is coming in through a window or door opening, it is difficult for the integrator to find its way to them. To fix this, use :ref:`Light Portals <render-cycles-lamps-area-portals>`, these work by adding an :ref:`Area Lamp <render-cycles-lamps-area>`. You then will need to modify its shape to match that of the opening that you are trying to fill."

msgid "Denoising"
msgstr "Lọc Nhiễu -- Denoising"

msgid "Even with all the settings described above there will always end up being some render noise no matter how many samples you use. To fix this there is a post-processing technique to cleanup the final bit of noise. To use this enable :doc:`Denoising </render/layers/denoising>` in the *Render Layers* tab of the Properties editor."
msgstr "Even with all the settings described above there will always end up being some render noise no matter how many samples you use. To fix this there is a post-processing technique to cleanup the final bit of noise. To use this enable :doc:`Denoising </render/cycles/settings/scene/render_layers/denoising>` in the *Render Layers* tab of the Properties editor."

msgid "Below is an example render by `The Pixelary <http://blog.thepixelary.com/post/160451378592/denoising-in-cycles-tested>`__."
msgstr "Below is an Ví Dụ -- Example Kết Xuất by `The Pixelary <http://blog.thepixelary.com/post/160451378592/denoising-in-cycles-tested>`__."

msgid "Example render before denoising."
msgstr "Ví Dụ -- Example Kết Xuất Trước Lọc Nhiễu."

msgid "Example render after denoising."
msgstr "Ví Dụ -- Example Kết Xuất Sau Lọc Nhiễu."

msgid "Clamp Fireflies"
msgstr "-- Clamp Fireflies"

msgid "Ideally with all the previous tricks, fireflies would be eliminated, but they could still happen. For that, the *intensity* that any individual light ray sample will contribute to a pixel can be *clamped* to a maximum value with the integrator :ref:`Clamp setting <render-cycles-integrator-clamp-samples>`."
msgstr "Ideally với Toàn Bộ the Trước tricks, fireflies would be eliminated, but they could still happen. For that, the *Cường Độ* that Bất Cứ Cá Nhân Nguồn/Ánh Sáng ray Lấy Mẫu Vật will Đóng Góp -- Contribute Tới a Điểm Ảnh có thể be *clamped* Tới a Tối Đa Giá Trị với the Tích Phân :ref:`Hạn Định setting <render-cycles-Tích Phân-clamp-samples>`."

msgid "If set too low this can cause missing highlights in the image, which might be useful to preserve for camera effects such as bloom or glare. To mitigate this conundrum it's often useful to clamp only indirect bounces, leaving highlights directly visible to the camera untouched."
msgstr "If Đặt too Thấp cái/điều này có thể cause Còn thiếu Điểm Nhấn Vào the Hình Ảnh, cái mà/tức might be useful Tới preserve for Máy Quay Phim Hiệu Ứng such as Sáng Lóa hoặc Lóe Sáng. Tới mitigate cái/điều này conundrum it's often useful Tới Hạn Định only Gián Tiếp Lượng Bật Nảy -- Bounces, leaving Điểm Nhấn directly Hữu Hình Tới the Máy Quay Phim untouched."

msgid "No Clamp (0)."
msgstr "No Hạn Định (0)."

msgid "With Clamp set to 4."
msgstr "với Hạn Định Đặt Tới 4."

