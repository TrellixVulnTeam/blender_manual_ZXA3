# Translations template for PROJECT.
# Copyright (C) 2019 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2019-11-13 01:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

msgid "Surfaces"
msgstr "Bề Mặt -- Surfaces"

msgid "The surface shader defines the light interaction at the surface of the mesh. One or more :abbr:`BSDF (Bidirectional scattering distribution function)`\\ s specify if incoming light is reflected back, refracted into the mesh, or absorbed."
msgstr "The surface shader defines the light interaction at the surface of the mesh. One or more :abbr:`BSDF (Bidirectional scattering distribution function)`\\ 's specify if incoming light is reflected back, refracted into the mesh, or absorbed."

msgid "Emission defines how light is emitted from the surface, allowing any surface to become a light source."
msgstr "Phát Xạ defines thế nào nguồn/ánh sáng is emitted từ the bề mặt, allowing bất cứ bề mặt tới become một nguồn/ánh sáng nguồn."

msgid "Terminology"
msgstr "-- Terminology"

msgid "BSDF"
msgstr "-- BSDF"

msgid "Stands for Bidirectional Scattering Distribution Function. It defines how light is reflected and refracted at a surface."
msgstr "Stands for Bidirectional Scattering Phân Bổ Function. It defines thế nào nguồn/ánh sáng is reflected và refracted tại một bề mặt."

msgid "Reflection"
msgstr "Phản Quang -- Reflection"

msgid "BSDFs reflect an incoming ray on the same side of the surface."
msgstr "BSDFs phản quang đối xứng một hướng nhìn vào ray bật the same bên/mặt của the bề mặt."

msgid "Transmission"
msgstr "Truyền Xạ -- Transmission"

msgid "BSDFs transmit an incoming ray through the surface, leaving on the other side."
msgstr "BSDFs transmit một hướng nhìn vào ray through the bề mặt, leaving bật the cái/sắp đặt khác bên/mặt."

msgid "Refraction"
msgstr "Khúc Xạ -- Refraction"

msgid "BSDFs are a type of *Transmission*, transmitting an incoming ray and changing its direction as it exits on the other side of the surface."
msgstr "BSDFs are một thể loại của *Truyền Xạ*, transmitting một hướng nhìn vào ray và changing của nó chiều hướng tựa như it exits bật the cái/sắp đặt khác bên/mặt của the bề mặt."

msgid "BSDF Parameters"
msgstr "-- BSDF Parameters"

msgid "A major difference from non-physically-based renderers is that direct light reflection from lights and indirect light reflection of other surfaces are not decoupled, but rather handled using a single :abbr:`BSDF (Bidirectional scattering distribution function)`. This limits the possibilities a bit, but we believe overall it is helpful in creating consistent-looking renders with fewer parameters to tune."
msgstr "A major difference from non-physically-based renderers is that direct light reflection from lamps and indirect light reflection of other surfaces are not decoupled, but rather handled using a single :abbr:`BSDF (Bidirectional scattering distribution function)`. This limits the possibilities a bit, but we believe overall it is helpful in creating consistent-looking renders with fewer parameters to tune."

msgid "Roughness"
msgstr "Độ Nhám/Ráp/Rối -- Roughness"

msgid "For the glossy :abbr:`BSDF (Bidirectional scattering distribution function)`\\ s, the *roughness* parameter controls the sharpness of the reflection, from 0.0 (perfectly sharp) to 1.0 (very soft)."
msgstr "For the glossy :abbr:`BSDF (Bidirectional scattering distribution function)`\\ s, the *roughness* parameter controls the sharpness of the reflection, from 0.0 (perfectly sharp) to 1.0 (very soft). Compared to *hardness* or *exponent* parameters, it has the advantage of being in the range 0.0 to 1.0, and as a result gives more linear control and is more easily textureable. The relation is roughly: *roughness* = 1 - 1/*hardness*"

