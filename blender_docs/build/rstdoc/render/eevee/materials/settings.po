# Translations template for PROJECT.
# Copyright (C) 2019 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2019-11-27 19:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

# Sắp Đặt Về Nguyên Vật Liệu -- Material Settings
msgid "Material Settings"
msgstr "Sắp Đặt Về Nguyên Vật Liệu"

# Tham Chiếu -- Reference
msgid "Reference"
msgstr "Tham Chiếu"

msgid "Panel"
msgstr "Bảng"

# :menuselection:`Properties --> Material --> Options`
msgid ":menuselection:`Properties --> Material --> Options`"
msgstr ":menuselection:`Nguyên Liệu (Material) --> Tùy Chọn (Options)`"

# Loại Bỏ Mặt Trái -- Backface Culling
msgid "Backface Culling"
msgstr "Loại Bỏ Mặt Trái"

msgid "Backface Culling hides the back side of faces in the final render."
msgstr "Backface Culling hides the back side of faces in the final render."

# Chế Độ Hòa Trộn -- Blend Mode
msgid "Blend Mode"
msgstr "Chế Độ Hòa Trộn"

msgid "After calculating the color of a surface, the blend mode defines how it is added to the color buffer. Depending on this, the final color will be different."
msgstr "After calculating the color of a surface, the blend mode defines how it is added to the color buffer. Depending on this, the final color will be different."

msgid "Alpha Blending is considered a \"Transparent\" blend mode and has implications regarding screen space effects."
msgstr "Alpha Blending is considered a \"Transparent\" blend mode and has implications regarding screen space effects."

# Đục -- Opaque
msgid "Opaque"
msgstr "Đục"

msgid "The previous color will be overwritten by the surface color. The alpha component is ignored. This is the fastest option."
msgstr "The previous color will be overwritten by the surface color. The alpha component is ignored. This is the fastest option."

# Loại Bỏ Alpha -- Alpha Clip
msgid "Alpha Clip"
msgstr "Loại Bỏ Alpha"

msgid "The previous color will be overwritten by the surface color, but only if the alpha value is above the clip threshold."
msgstr "The previous color will be overwritten by the surface color, but only if the alpha value is above the clip threshold."

# Alpha Băm -- Alpha Hashed
msgid "Alpha Hashed"
msgstr "Alpha Băm"

msgid "The previous color will be overwritten by the surface color, but only if the alpha value is above a random clip threshold. This statistical approach is noisy but is able to approximate alpha blending without any sorting problem. Increasing the sample count in the render settings will reduce the resulting noise."
msgstr "The previous color will be overwritten by the surface color, but only if the alpha value is above a random clip threshold. This statistical approach is noisy but is able to approximate alpha blending without any sorting problem. Increasing the sample count in the render settings will reduce the resulting noise."

msgid "Alpha Blending"
msgstr "Alpha Blending"

msgid "Use alpha blending to overlay the surface color on top of the previous color."
msgstr "Use alpha blending to overlay the surface color on top of the previous color."

msgid "Sorting Problem"
msgstr "Sorting Problem"

msgid "When writing to the color buffer using transparent blend modes, the order in which the color blending happens is important as it can change the final output color. As of now Eevee does not support per-fragment (pixel) sorting or per-triangle sorting. Only per-object sorting is available and is automatically done on all transparent surfaces based on object origin."
msgstr "When writing to the color buffer using transparent blend modes, the order in which the color blending happens is important as it can change the final output color. As of now Eevee does not support per-fragment (pixel) sorting or per-triangle sorting. Only per-object sorting is available and is automatically done on all transparent surfaces based on object origin."

msgid "This per-object sorting has already a cost and having thousands of these objects in a scene will greatly degrade performance."
msgstr "This per-object sorting has already a cost and having thousands of these objects in a scene will greatly degrade performance."

msgid "Show Backside"
msgstr "Show Backside"

msgid "If enabled, all transparent fragments will be rendered. If disabled, only the front-most surface fragments will be rendered. Disable this option to ensure correct appearance of transparency from any point of view. Then using *Alpha Blending* this option should be disabled because with *Alpha Blending*, the order in which triangles are sorted is important."
msgstr "If enabled, all transparent fragments will be rendered. If disabled, only the front-most surface fragments will be rendered. Disable this option to ensure correct appearance of transparency from any point of view. Then using *Alpha Blending* this option should be disabled because with *Alpha Blending*, the order in which triangles are sorted is important."

msgid "Transparent Shadow"
msgstr "Transparent Shadow"

msgid "Type of shadows used for a transparent surface. Eevee does not support colored shadow maps."
msgstr "Type of shadows used for a transparent surface. Eevee does not support colored shadow maps."

msgid "Half transparent shadows can be produced by using hashed transparent shadows and a larger Soft value on the shadow map."
msgstr "Half transparent shadows can be produced by using hashed transparent shadows and a larger Soft value on the shadow map."

msgid "This option does not change the behavior of contact shadows which are traced using the depth buffer. If the material is writing to the depth buffer (in other words, if the blend mode is set to either *Opaque*, *Alpha Clip* or *Alpha Hashed*), contact shadows will be casted by the surface material regardless of the *Transparent Shadow* type."
msgstr "This option does not change the behavior of contact shadows which are traced using the depth buffer. If the material is writing to the depth buffer (in other words, if the blend mode is set to either *Đục -- Opaque*, *Loại Bỏ Alpha -- Alpha Clip* or *Alpha Băm -- Alpha Hashed*), contact shadows will be casted by the surface material regardless of the *Transparent Shadow* type."

# Không/Có/Làm -- None
msgid "None"
msgstr "Không/Có/Làm"

msgid "The surface will not cast any shadow."
msgstr "The surface will not cast any shadow."

msgid "The surface will cast shadows like an opaque surface."
msgstr "The surface will cast shadows like an opaque surface."

# Cắt/Xén -- Clip
msgid "Clip"
msgstr "Cắt/Xén"

msgid "The surface will cast shadows like an opaque surface, but only areas where the alpha value is above the clip threshold."
msgstr "The surface will cast shadows like an opaque surface, but only areas where the alpha value is above the clip threshold."

msgid "Hashed"
msgstr "Hashed"

msgid "The surface will cast shadows like an opaque surface, but only areas where the alpha value is above a random threshold."
msgstr "The surface will cast shadows like an opaque surface, but only areas where the alpha value is above a random threshold."

# Khúc Xạ Không Gian Màn Hình -- Screen Space Refraction
msgid "Screen Space Refraction"
msgstr "Khúc Xạ Không Gian Màn Hình"

msgid "Enabling Screen Space Refraction on a surface means that refraction BSDFs will do a raytrace against the depth buffer to find the most accurate refracted color. This has a big performance cost if the surface covers a lot of pixels."
msgstr "Enabling Screen Space Refraction on a surface means that refraction BSDFs will do a raytrace against the depth buffer to find the most accurate refracted color. This has a big performance cost if the surface covers a lot of pixels."

msgid "Screen Space Reflections and Ambient Occlusion are not compatible with Screen Space Refraction. They will be disabled on the surfaces that use it. Surfaces that use Screen Space Refraction will not appear in Screen Space Reflections at the right place. Surfaces that use Screen Space Refraction will not cast Ambient Occlusion onto other surfaces."
msgstr "Screen Space Reflections and Ambient Occlusion are not compatible with Screen Space Refraction. They will be disabled on the surfaces that use it. Surfaces that use Screen Space Refraction will not appear in Screen Space Reflections at the right place. Surfaces that use Screen Space Refraction will not cast Ambient Occlusion onto other surfaces."

msgid "If this option is disabled or if the Screen Space Refraction raytrace fails, the refracted ray will use the color of the nearest probe."
msgstr "If this option is disabled or if the Screen Space Refraction raytrace fails, the refracted ray will use the color of the nearest probe."

msgid "Enables screen space refraction."
msgstr "-- Screen Space Refraction"

# Chiều Sâu Khúc Xạ -- Refraction Depth
msgid "Refraction Depth"
msgstr "Chiều Sâu Khúc Xạ"

msgid "If Refraction Depth is not 0.0, all refraction BSDFs in the shader will act as if the object is a thin slab of the refraction material having this thickness. This will model a second refraction event that will double the absorption color and start the refraction ray after this second event."
msgstr "If Refraction Depth is not 0.0, all refraction BSDFs in the shader will act as if the object is a thin slab of the refraction material having this thickness. This will model a second refraction event that will double the absorption color and start the refraction ray after this second event."

msgid "This option greatly increases the quality of thin glass objects."
msgstr "This option greatly increases the quality of thin glass objects."

# Tính Trong Mờ Dưới Bề Mặt -- Subsurface Translucency
msgid "Subsurface Translucency"
msgstr "Tính Trong Mờ Dưới Bề Mặt"

msgid "Eevee's Subsurface Scattering algorithm works by blurring the irradiance in screen space. This means that if no visible part of the surface is lit, the effect disappears."
msgstr "Eevee's Subsurface Scattering algorithm works by blurring the irradiance in screen space. This means that if no visible part of the surface is lit, the effect disappears."

msgid "However, true Subsurface Scattering goes beneath the surface and can travel a lot of distance. This is why a human ear lit from behind appears red on the front side."
msgstr "However, true Subsurface Scattering goes beneath the surface and can travel a lot of distance. This is why a human ear lit from behind appears red on the front side."

msgid "That is what this effect mimics. This translucency approximation only works with lights that have shadow maps and only on Subsurface BSDFs (not the Translucency BSDFs). It does not work with indirect lighting. The soft parameter of the shadow maps also affects this effect."
msgstr "That is what this effect mimics. This translucency approximation only works with lights that have shadow maps and only on Subsurface BSDFs (not the Translucency BSDFs). It does not work with indirect lighting. The soft parameter of the shadow maps also affects this effect."

# Chỉ Số Lượt -- Pass Index
msgid "Pass Index"
msgstr "Chỉ Số Lượt"

msgid "Index number for the *Material Index* :doc:`render pass </render/layers/passes>`. This can be used to give a mask to a material which then can be read with the :doc:`ID Mask Node </compositing/types/converter/id_mask>` in the Compositor."
msgstr "Index number for the *Chỉ Số Nguyên Vật Liệu -- Material Index* :doc:`lượt kết xuất -- render pass </render/layers/passes>`. This can be used to give a mask to a material which then can be read with the :doc:`Nút Chắn Lọc ID -- ID Mask Node </compositing/types/converter/id_mask>` in the Compositor."

