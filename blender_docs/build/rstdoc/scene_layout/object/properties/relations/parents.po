# Translations template for PROJECT.
# Copyright (C) 2019 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2019-11-27 19:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

# Vật Thể Phụ Huynh -- Parenting Objects
msgid "Parenting Objects"
msgstr "Vật Thể Phụ Huynh"

# Đặt Phụ Huynh -- Make Parent
msgid "Make Parent"
msgstr "Đặt Phụ Huynh"

# Tham Chiếu -- Reference
msgid "Reference"
msgstr "Tham Chiếu"

msgid "Mode"
msgstr "Chế Độ"

msgid "Object Mode"
msgstr "Chế Độ Vật Thể"

msgid "Menu"
msgstr "Trình Đơn"

# :menuselection:`Object --> Parent`
msgid ":menuselection:`Object --> Parent`"
msgstr ":menuselection:`Vật Thể (Object) --> Phụ Huynh (Parent)`"

msgid "Hotkey"
msgstr "Phím Tắt"

msgid ":kbd:`Ctrl-P`"
msgstr ":kbd:`:kbd:`Ctrl-P``"

msgid "When modeling a complex object, such as a watch, you may choose to model the different parts as separate objects. However, all of the parts may be attached to each other. In these cases, you want to designate one object as the parent of all the children. Movement, rotation or scaling of the parent also affects the children."
msgstr "When modeling a complex object, such as a watch, you may choose to model the different parts as separate objects. However, all of the parts may be attached to each other. In these cases, you want to designate one object as the parent of all the children. Movement, rotation or scaling of the parent also affects the children."

msgid "To parent objects, select at least two objects (select the *Child Objects* first, and select the *Parent Object* last), and press :kbd:`Ctrl-P`. The *Set Parent To* menu will pop up allowing you to select from one of several possible different parenting types. Selecting one of the entries in *Set Parent To* confirms, and the child/children to parent relationship is created."
msgstr "To parent objects, select at least two objects (select the *Child Objects* first, and select the *Phụ Huynh -- Parent Object* last), and press :kbd:`:kbd:`Ctrl-P``. The *Đặt Làm Phụ Huynh Cho -- Set Parent To*ynh Cho -- Set Parent To* menu will pop up allowing you to select from one of several possible different parenting types. Selecting one of the entries in *Set Parent To* confirms, and the child/children to parent relationship is created."

msgid "The last object selected will be the *Active Object* (outlined in light orange), and will also be the *Parent Object*. If you selected multiple objects before selecting the parent, they will all be children of the parent and will be at the same level of the hierarchy (they are \"siblings\")."
msgstr "The last object selected will be the *Vật Thể Đang Hoạt Động -- Active Object* (outlined in light orange), and will also be the *Phụ Huynh -- Parent Object*. If you selected multiple objects before selecting the parent, they will all be children of the parent and will be at the same level of the hierarchy (they are \"siblings\")."

msgid "The *Set Parent To* pop-up menu is context-sensitive, which means the number of entries it displays can change depending on what objects are selected when the :kbd:`Ctrl-P` shortcut is used."
msgstr "The *Đặt Làm Phụ Huynh Cho -- Set Parent To* pop-up menu is context-sensitive, which means the number of entries it displays can change depending on what objects are selected when the :kbd:`:kbd:`Ctrl-P`` shortcut is used."

msgid "For parenting without `Parent Inverse`_, use the :kbd:`Shift-Ctrl-P` shortcut instead."
msgstr "For parenting without `Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse -- Parent Inverse`_, use the :kbd:`:kbd:`Shift-Ctrl-P`` shortcut instead."

msgid "Moving, rotating or scaling the parent will also usually move/rotate/scale the child/children. However, moving/rotating/scaling the child/children of the parent will not result in the parent moving/rotating/scaling. In other words, the direction of influence is from parent to child and not child to parent."
msgstr "Moving, rotating or scaling the parent will also usually move/rotate/scale the child/children. However, moving/rotating/scaling the child/children of the parent will not result in the parent moving/rotating/scaling. In other words, the direction of influence is from parent to child and not child to parent."

# In general when using :kbd:`:kbd:`Ctrl-P`` or :menuselection:`3D View Header --> Object --> Parent` to parent objects, the *Child Objects* can only have one *Phụ Huynh -- Parent Object*arent O*Vật Thể Con Em -- Child Object*Child Object* already has a *Parent Object* and you give it another parent then Blender will remove the previous parent relationship.
msgid "In general when using :kbd:`Ctrl-P` or :menuselection:`3D View Header --> Object --> Parent` to parent objects, the *Child Objects* can only have one *Parent Object*. If a *Child Object* already has a *Parent Object* and you give it another parent then Blender will remove the previous parent relationship."
msgstr "In general when using :kbd:`Ctrl-P` or :menuselection:`Thanh Tiêu Đề Góc Nhìn 3D (3D View Header) --> Vật Thể (Object) --> Phụ Huynh (Parent)` to parent objects, the *Child Objects* can only have one *Parent Object*. If a *Child Object* already has a *Parent Object* and you give it another parent then Blender will remove the previous parent relationship."

# Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse -- Parent Inverse
msgid "Parent Inverse"
msgstr "Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse"

msgid "When objects are parented with :kbd:`Ctrl-P`, the current transformation of the parent is stored in a hidden *Parent Inverse* matrix. By using that, the location, rotation and scale properties of the child can continue to be effectively interpreted in world space, as long as the parent doesn't move."
msgstr "When objects are parented with :kbd:`:kbd:`Ctrl-P``, the current transformation of the parent is stored in a hidden *Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse -- Parent Inverse* matrix. By using that, the location, rotation and scale properties of the child can continue to be effectively interpreted in world space, as long as the parent doesn't move."

# For parenting without assigning the matrix, use the :kbd:`:kbd:`Shift-Ctrl-P`` shortcut instead. This creates an alternative parent-child-relationship where child object's properties are evaluated in the parent's coordinate system. This is the better choice for CAD purposes, for example.
msgid "For parenting without assigning the matrix, use the :kbd:`Shift-Ctrl-P` shortcut instead. This creates an alternative parent-child-relationship where child object's properties are evaluated in the parent's coordinate system. This is the better choice for CAD purposes, for example."
msgstr "For non-inverse-mode, press :kbd:`Shift-Ctrl-P` instead. This creates an alternative parent-child-relationship where child objects exist entirely in the parent's coordinate system. This is the better choice for CAD purposes, for example."

msgid "The matrix can also be cleared after parenting by using :ref:`Clear Parent Inverse <bpy.ops.object.parent_clear>`."
msgstr "The matrix can also be cleared after parenting by using :ref:`Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse <bpy.ops.object.parent_clear>`."

msgid "Parent Types"
msgstr "Parent Types"

msgid "Blender supports many different types of parenting, listed below:"
msgstr "Blender supports many different types of parenting, listed below:"

msgid "Object"
msgstr "Vật Thể"

msgid "Bone"
msgstr "Xương"

msgid "Vertex"
msgstr "Điểm Đỉnh"

msgid "Vertex (Triangle)"
msgstr "Điểm Đỉnh (Tam Giác)"

msgid "Setups"
msgstr "Setups"

msgid "Besides parenting the selected objects, it adds a Modifier or Constraint to the child objects, with the parent as target object or activates a parent property i.e. *Follow Path*."
msgstr "Besides parenting the selected objects, it adds a Modifier or Constraint to the child objects, with the parent as target object or activates a parent property i.e. *Đi Theo Đường Dẫn -- Follow Path*."

# :doc:`Biến Dạng Của Cốt -- Armature Deform </animation/armatures/skinning/parenting>`
msgid ":doc:`Armature Deform </animation/armatures/skinning/parenting>`"
msgstr ":doc:`Armature Deform </rigging/armatures/skinning/parenting>`"

msgid ":doc:`Curve Deform </modeling/modifiers/deform/curve>`"
msgstr ":doc:`Biến Dạng Bằng Đường Cong -- Curve Deform </modeling/modifiers/deform/curve>`"

msgid ":ref:`Follow Path <curve-path-animation>`"
msgstr ":ref:`Đi Theo Đường Dẫn -- Follow Path <curve-path-animation>`"

# :doc:`Ràng Buộc Đường Dẫn -- Path Constraint </animation/constraints/relationship/follow_path>`
msgid ":doc:`Path Constraint </animation/constraints/relationship/follow_path>`"
msgstr ":doc:`Path Constraint </rigging/constraints/relationship/follow_path>`"

msgid ":doc:`Lattice Deform </modeling/modifiers/deform/lattice>`"
msgstr ":doc:`Biến Dạng Của Giàn Lưới -- Lattice Deform </modeling/modifiers/deform/lattice>`"

# Phụ Huynh Của Vật Thể -- Object Parent
msgid "Object Parent"
msgstr "Phụ Huynh Của Vật Thể"

msgid "*Object Parent* is the most general form of parenting that Blender supports. If will take selected objects and make the last selected object the *Parent Object*, while all other selected objects will be *Child Objects*. The child objects will inherit the transformations of the parent. The parent object can be of any type."
msgstr "*Phụ Huynh Của Vật Thể -- Object Parent* is the most general form of parenting that Blender supports. If will take selected objects and make the last selected object the *Phụ Huynh -- Parent Object*, while all other selected objects will be *Child Objects*. The child objects will inherit the transformations of the parent. The parent object can be of any type."

# Phụ Huynh Của Vật Thể (Duy Trì Biến Hóa) -- Object (Keep Transform) Parent
msgid "Object (Keep Transform) Parent"
msgstr "Phụ Huynh Của Vật Thể (Duy Trì Biến Hóa)"

msgid "*Object (Keep Transform) Parent* works in a very similar way to *Object Parent*. The major difference is in whether the *Child Objects* will remember any previous transformations applied to them from the previous *Parent Object*."
msgstr "*Phụ Huynh Của Vật Thể (Duy Trì Biến Hóa) -- Object (Keep Transform) Parent* works in a very similar way to *Phụ Huynh Của Vật Thể -- Object Parent*. The major difference is in whether the *Child Objects* will remember any previous transformations applied to them from the previous *Phụ Huynh -- Parent Object*."

msgid "Since explaining this in an easy to understand technical way is hard, let's instead use an example to demonstrate."
msgstr "Since explaining this in an easy to understand technical way is hard, let's instead use an example to demonstrate."

msgid "Assume that we have a scene consisting of three objects, those being two Empty Objects named \"EmptyA\" and \"EmptyB\", and a Monkey object. Fig. :ref:`fig-view3d-parent-scene-no` shows the three objects with no parenting relationships active on them."
msgstr "Assume that we have a scene consisting of three objects, those being two Empty Objects named \"EmptyA\" and \"EmptyB\", and a Monkey object. Fig. :ref:`fig-view3d-parent-scene-no` shows the three objects with no parenting relationships active on them."

msgid "Scene with no parenting."
msgstr "Scene with no parenting."

msgid "If you select the Monkey object by :kbd:`RMB` click and then :kbd:`Shift-RMB` click \"EmptyA\" object and press :kbd:`Ctrl-P` and finally select *Object* from the *Set Parent To* pop-up menu. This will result in \"EmptyA\" object being the *Parent Object* of the Monkey object. With only \"EmptyA\" selected rotating/scaling/moving it will result in the Monkey object being altered respectively."
msgstr "If you select the Monkey object by :kbd:`:kbd:`NCP (RMB)`` click and then :kbd:`:kbd:`Shift-NCP (RMB)`` click \"EmptyA\" object and press :kbd:`:kbd:`Ctrl-P`` and finally select *Vật Thể -- Object* from the *Đặt Làm Phụ Huynh Cho -- Set Parent To* pop-up menu. This will result in \"EmptyA\" object being the *Phụ Huynh -- Parent Object* of the Monkey object. With only \"EmptyA\" selected rotating/scaling/moving it will result in the Monkey object being altered respectively."

msgid "Scale the \"EmptyA\" object, so that the Monkey becomes smaller and moves to the left a little."
msgstr "Scale the \"EmptyA\" object, so that the Monkey becomes smaller and moves to the left a little."

msgid "The monkey is the child object of \"EmptyA\"."
msgstr "The monkey is the child object of \"EmptyA\"."

msgid "If you select only the Monkey object by :kbd:`RMB` click and then :kbd:`Shift-RMB` click \"EmptyB\" object and press :kbd:`Ctrl-P` and select *Object* from the *Set Parent To* pop-up menu. This will result in \"EmptyB\" object being the *Parent Object* of the Monkey object. Notice that when you change the parent of the Monkey the scale of the Monkey changed."
msgstr "If you select only the Monkey object by :kbd:`:kbd:`NCP (RMB)`` click and then :kbd:`:kbd:`Shift-NCP (RMB)`` click \"EmptyB\" object and press :kbd:`:kbd:`Ctrl-P`` and select *Vật Thể -- Object* from the *Đặt Làm Phụ Huynh Cho -- Set Parent To* pop-up menu. This will result in \"EmptyB\" object being the *Phụ Huynh -- Parent Object* of the Monkey object. Notice that when you change the parent of the Monkey the scale of the Monkey changed."

msgid "The monkey is the child object of \"EmptyB\"."
msgstr "The monkey is the child object of \"EmptyB\"."

msgid "This happens because the Monkey object never had its scale altered directly, the change came about because it was the child of \"EmptyA\" which had its scale altered. Changing the Monkey's parent to \"EmptyB\" resulted in those indirect changes in scale being removed, because \"EmptyB\" has not had its scale altered."
msgstr "This happens because the Monkey object never had its scale altered directly, the change came about because it was the child of \"EmptyA\" which had its scale altered. Changing the Monkey's parent to \"EmptyB\" resulted in those indirect changes in scale being removed, because \"EmptyB\" has not had its scale altered."

msgid "This is often the required behavior, but it is also sometimes useful that if you change your *Parent Object* that the *Child Object* keep any previous transformations it got from the old *Parent Object*; If instead when changing the *Parent Object* of the Monkey from \"EmptyA\" to \"EmptyB\" we had chosen parenting type *Object (Keep Transform)*, the Monkey would keep its scale information it obtained from the old parent \"EmptyA\" when it is assigned to the new parent \"EmptyB\";"
msgstr "This is often the required behavior, but it is also sometimes useful that if you change your *Phụ Huynh -- Parent Object*arent Obje*Vật Thể Con Em -- Child Object*t* that the *Child Object* keep any previous transformations it got from the old *Parent Object*; If instead when changing the *Parent Object* of the Monkey from \"EmptyA\" to \"EmptyB\" we had chosen parenting type *Vật Thể (Giữ Nguyên Biến Hóa) -- Object (Keep Transform)*, the Monkey would keep its scale information it obtained from the old parent \"EmptyA\" when it is assigned to the new parent \"EmptyB\";"

msgid "The Object (Keep Transform) parent method."
msgstr "The Object (Keep Transform) parent method."

msgid "If you want to follow along with the above description here is the blend-file used to describe *Object (Keep Transform)* parenting method:"
msgstr "If you want to follow along with the above description here is the blend-file used to describe *Vật Thể (Giữ Nguyên Biến Hóa) -- Object (Keep Transform)* parenting method:"

msgid "`File:Parent_-_Object_(Keep_Transform)_(Demo_File).blend <https://wiki.blender.org/wiki/File:Parent_-_Object_(Keep_Transform)_(Demo_File).blend>`__."
msgstr "`File:Parent_-_Object_(Keep_Transform)_(Demo_File).blend <https://wiki.blender.org/wiki/File:Parent_-_Object_(Keep_Transform)_(Demo_File).blend>`__."

# Phụ Huynh Của Xương -- Bone Parent
msgid "Bone Parent"
msgstr "Phụ Huynh Của Xương"

msgid "Bone parenting allows you to make a certain bone in an armature the Parent Object of another object. This means that when transforming an armature the Child Object will only move if the specific bone is the Child Object of moves."
msgstr "Bone parenting allows you to make a certain bone in an armature the Parent Object of another object. This means that when transforming an armature the Child Object will only move if the specific bone is the Child Object of moves."

msgid "Three pictures of armatures with four bones."
msgstr "Three pictures of armatures with four bones."

msgid "In Fig. :ref:`fig-view3d-parent-bone-parent` with the 2nd bone being the Bone Parent of the Child Object Cube. The Cube is only transformed if the 1st or 2nd bones are. Notice altering the 3rd and 4th bones has no effect on the Cone."
msgstr "In Fig. :ref:`fig-view3d-parent-bone-parent` with the 2nd bone being the Bone Parent of the Child Object Cube. The Cube is only transformed if the 1st or 2nd bones are. Notice altering the 3rd and 4th bones has no effect on the Cone."

msgid "To use Bone Parenting, you must first select all the Child Objects you wish to parent to a specific Armature Bone, then :kbd:`Shift-RMB` select the Armature Object and switch it into Pose Mode and then select the specific bone you wish to be the Parent Bone by :kbd:`RMB` selecting it. Once done press :kbd:`Ctrl-P` and select Bone from the Set Parent To pop-up menu."
msgstr "To use Bone Parenting, you must first select all the Child Objects you wish to parent to a specific Armature Bone, then :kbd:`:kbd:`Shift-NCP (RMB)`` select the Armature Object and switch it into Pose Mode and then select the specific bone you wish to be the Parent Bone by :kbd:`:kbd:`NCP (RMB)`` selecting it. Once done press :kbd:`:kbd:`Ctrl-P`` and select Bone from the Set Parent To pop-up menu."

msgid "Now transforming that bone in Pose Mode will result in the Child Objects also transforming."
msgstr "Now transforming that bone in Pose Mode will result in the Child Objects also transforming."

# Phụ Huynh Hóa Tương Đối -- Relative Parenting
msgid "Relative Parenting"
msgstr "Phụ Huynh Hóa Tương Đối"

msgid "Bone Relative parenting is an option you can toggle for each bone. This works in the same way as Bone parenting with one difference."
msgstr "Bone Relative parenting is an option you can toggle for each bone. This works in the same way as Bone parenting with one difference."

msgid "With Bone parenting if you have parented a bone to some Child Objects and you select that bone and switch it into Edit Mode and then move that bone; When you switch back into Pose Mode on that bone, the Child Object which is parented to that bone will snap back to the location of the bone in Pose Mode."
msgstr "With Bone parenting if you have parented a bone to some Child Objects and you select that bone and switch it into Edit Mode and then move that bone; When you switch back into Pose Mode on that bone, the Child Object which is parented to that bone will snap back to the location of the bone in Pose Mode."

msgid "Single armature bone which has a child object cube parented to it using bone parenting."
msgstr "Single armature bone which has a child object cube parented to it using bone parenting."

msgid "In Fig. :ref:`fig-view3d-parent-bone-parent-child` the 1st picture shows the position of the cube and armature before the bone is moved in Edit Mode. 2nd picture shows the position of the cube and armature after the bone was selected in Edit Mode, moved and switched back into Pose Mode. Notice that the Child Object moves to the new location of the Pose Bone."
msgstr "In Fig. :ref:`fig-view3d-parent-bone-parent-child` the 1st picture shows the position of the cube and armature before the bone is moved in Edit Mode. 2nd picture shows the position of the cube and armature after the bone was selected in Edit Mode, moved and switched back into Pose Mode. Notice that the Child Object moves to the new location of the Pose Bone."

msgid "Bone Relative parenting works differently; If you move a Parent Bone in Edit Mode, when you switch back to Pose Mode, the Child Objects will not move to the new location of the Pose Bone."
msgstr "Bone Relative parenting works differently; If you move a Parent Bone in Edit Mode, when you switch back to Pose Mode, the Child Objects will not move to the new location of the Pose Bone."

msgid "Single bone with bone relative parent to a cube."
msgstr "Single bone with bone relative parent to a cube."

msgid "In Fig. :ref:`fig-view3d-parent-bone-parent-relative` the 1st picture shows the position of the cube and armature before the bone is moved in Edit Mode. 2nd picture shows the position of the cube and armature after the bone was selected in Edit Mode, moved and switched back into Pose Mode. Notice that the Child Object does not move to the new location of the Pose Bone."
msgstr "In Fig. :ref:`fig-view3d-parent-bone-parent-relative` the 1st picture shows the position of the cube and armature before the bone is moved in Edit Mode. 2nd picture shows the position of the cube and armature after the bone was selected in Edit Mode, moved and switched back into Pose Mode. Notice that the Child Object does not move to the new location of the Pose Bone."

# Phụ Huynh Của Điểm Đỉnh -- Vertex Parent
msgid "Vertex Parent"
msgstr "Phụ Huynh Của Điểm Đỉnh"

msgid "For objects of type curve, surface, mesh and lattice, there is the possibility to use one of its vertices or points as the parent of other objects. You can parent an object to a single vertex or a group of three vertices as well; that way the child/children will move when the parent mesh is deformed."
msgstr "For objects of type curve, surface, mesh and lattice, there is the possibility to use one of its vertices or points as the parent of other objects. You can parent an object to a single vertex or a group of three vertices as well; that way the child/children will move when the parent mesh is deformed."

# Phụ Huynh của Điểm Đỉnh trong Chế Độ Biên Soạn -- Vertex Parent from Edit Mode
msgid "Vertex Parent from Edit Mode"
msgstr "Phụ Huynh của Điểm Đỉnh trong Chế Độ Biên Soạn"

msgid "In *Object Mode*, select the child/children and then the parent object. :kbd:`Tab` into *Edit Mode* and on the parent object select either one vertex that defines a single point, or select three vertices that define an area (the three vertices do not have to form a complete face; they can be any three vertices of the parent object), and then press :kbd:`Ctrl-P` and confirm."
msgstr "In *Chế Độ Vật Thể -- Object Mode*, select the child/children and then the parent object. :kbd:`Tab` into *Chế Độ Biên Soạn -- Edit Mode* and on the parent object select either one vertex that defines a single point, or select three vertices that define an area (the three vertices do not have to form a complete face; they can be any three vertices of the parent object), and then press :kbd:`:kbd:`Ctrl-P`` and confirm."

msgid "At this point, if a single vertex was selected, a relationship/parenting line will be drawn from the vertex to the child/children. If three vertices were selected then a relationship/parenting line is drawn from the averaged center of the three points (of the parent object) to the child/children. Now, as the parent mesh deforms and the chosen parent vertex/vertices move, the child/children will move as well."
msgstr "At this point, if a single vertex was selected, a relationship/parenting line will be drawn from the vertex to the child/children. If three vertices were selected then a relationship/parenting line is drawn from the averaged center of the three points (of the parent object) to the child/children. Now, as the parent mesh deforms and the chosen parent vertex/vertices move, the child/children will move as well."

# Phụ Huynh của Điểm Đỉnh trong Chế Độ Vật Thể -- Vertex Parent from Object Mode
msgid "Vertex Parent from Object Mode"
msgstr "Phụ Huynh của Điểm Đỉnh trong Chế Độ Vật Thể"

msgid "Vertex parenting can be performed from object mode, this is done like regular object parenting, press :kbd:`Ctrl-P` in object mode and select *Vertex* or *Vertex (Triangle)*."
msgstr "Vertex parenting can be performed from object mode, this is done like regular object parenting, press :kbd:`:kbd:`Ctrl-P`` in object mode and select *Điểm Đỉnh -- Vertex* or *Điểm Đỉnh (Tam Giác) -- Vertex (Triangle)*."

msgid "The nearest vertices will be used from each object which is typically what you would want."
msgstr "The nearest vertices will be used from each object which is typically what you would want."

msgid "Vertex Parent example."
msgstr "Vertex Parent example."

msgid "The small cubes can each be automatically parented to a triad of nearby vertices on the icosphere using the \"Vertex (Triangle)\" in the set parent context menu."
msgstr "The small cubes can each be automatically parented to a triad of nearby vertices on the icosphere using the \"Vertex (Triangle)\" in the set parent context menu."

msgid "Reshaping the object in edit mode then means each of the cubes follows their vertex parent separately."
msgstr "Reshaping the object in edit mode then means each of the cubes follows their vertex parent separately."

msgid "Re-scaling the parent icosphere in object mode means the child cubes are also rescaled as expected."
msgstr "Re-scaling the parent icosphere in object mode means the child cubes are also rescaled as expected."

msgid "The parent context menu item means users can rapidly set up a large number of vertex parent relationships, and avoid the tedious effort of establishing each parent-child vertex relationship separately."
msgstr "The parent context menu item means users can rapidly set up a large number of vertex parent relationships, and avoid the tedious effort of establishing each parent-child vertex relationship separately."

msgid "It is in fact a sort of \"reversed\" :doc:`hook </modeling/modifiers/deform/hooks>`."
msgstr "It is in fact a sort of \"reversed\" :doc:`móc -- hook </modeling/modifiers/deform/hooks>`."

# Tùy Chọn -- Options
msgid "Options"
msgstr "Tùy Chọn"

# Di Chuyển Con Cái -- Move Child
msgid "Move Child"
msgstr "Di Chuyển Con Cái"

msgid "You can *move* a child object to its parent by clearing its origin. The relationship between the parent and child is not affected. Select the child object and press :kbd:`Alt-O`. By confirming the child object will snap to the parent's location. Use the *Outliner* view to verify that the child object is still parented."
msgstr "You can *di chuyển -- move* a child object to its parent by clearing its origin. The relationship between the parent and child is not affected. Select the child object and press :kbd:`:kbd:`Alt-O``. By confirming the child object will snap to the parent's location. Use the *Mục Lục -- Outliner* view to verify that the child object is still parented."

# Xóa Phụ Huynh -- Clear Parent
msgid "Clear Parent"
msgstr "Xóa Phụ Huynh"

msgid ":kbd:`Alt-P`"
msgstr ":kbd:`:kbd:`Alt-P``"

msgid "You can *remove* a parent-child relationship via :kbd:`Alt-P`."
msgstr "You can *xóa -- remove* a parent-child relationship via :kbd:`:kbd:`Alt-P``."

msgid "If the parent in the group is selected, nothing is done. If a child or children are selected, they are disassociated from the parent, or freed, and they return to their *original* location, rotation, and size."
msgstr "If the parent in the group is selected, nothing is done. If a child or children are selected, they are disassociated from the parent, or freed, and they return to their *gốc/nguyên bản -- original* location, rotation, and size."

# Xóa nhưng Duy Trì Biến Hóa -- Clear and Keep Transformation
msgid "Clear and Keep Transformation"
msgstr "Xóa nhưng Duy Trì Biến Hóa"

msgid "Frees the children from the parent, and *keeps* the location, rotation, and size given to them by the parent."
msgstr "Frees the children from the parent, and *keeps* the location, rotation, and size given to them by the parent."

msgid "See `Non-Uniform Scale`_ which may apply here."
msgstr "See `Đổi Tỷ Lệ Đồng Đều -- Non-Uniform Scale`_ which may apply here."

# Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse
msgid "Clear Parent Inverse"
msgstr "Đảo Nghịch Xóa Phụ Huynh"

msgid "Instead of removing the hierarchical parent-child relationship, this clears the `Parent Inverse`_ matrix from the selected objects. With an empty matrix, the location, rotation and scale properties of the children are interpreted in the coordinate space of the parent."
msgstr "Instead of removing the hierarchical parent-child relationship, this clears the `Đảo Nghịch Xóa Phụ Huynh -- Clear Parent Inverse -- Parent Inverse`_ matrix from the selected objects. With an empty matrix, the location, rotation and scale properties of the children are interpreted in the coordinate space of the parent."

msgid "**Use the Outliner**"
msgstr "**Use the Outliner**"

msgid "There is another way to see the parent-child relationship in groups and that is to use the *Outliner* view of the :doc:`Outliner editor </editors/outliner>`."
msgstr "There is another way to see the parent-child relationship in groups and that is to use the *Mục Lục -- Outliner* view of the :doc:`Outliner editor </editors/outliner>`."

# Những Hạn Chế Từng Biết Đến -- Known Limitations
msgid "Known Limitations"
msgstr "Những Hạn Chế Từng Biết Đến"

# Đổi Tỷ Lệ Đồng Đều -- Non-Uniform Scale
msgid "Non-Uniform Scale"
msgstr "Đổi Tỷ Lệ Đồng Đều"

msgid "A parent with non-uniform scale and rotation in relation to its child may cause a *shear* effect."
msgstr "A parent with non-uniform scale and rotation in relation to its child may cause a *ứng suất cắt/xiêu vẹo -- shear* effect."

msgid "While this is supported by parenting, the shear will be lost when the parent is cleared since it can't be represented by location, scale and rotation."
msgstr "While this is supported by parenting, the shear will be lost when the parent is cleared since it can't be represented by location, scale and rotation."

msgid "If *Clear and Keep Transformation* moves the object, non-uniform scale is the most likely cause."
msgstr "If *Xóa nhưng Duy Trì Biến Hóa -- Clear and Keep Transformation* moves the object, non-uniform scale is the most likely cause."

