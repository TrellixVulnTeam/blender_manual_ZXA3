# Translations template for PROJECT.
# Copyright (C) 2019 ORGANIZATION
# This file is distributed under the same license as the PROJECT project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PROJECT VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2019-11-27 19:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

# Giới Thiệu -- Introduction
msgid "Introduction"
msgstr "Giới Thiệu"

# Constraints are a way to control an object's properties (e.g. its location, rotation, scale), using either plain static values (like the :doc:`"limit" ones </animation/constraints/transform/limit_location>`), or another object, called "target" (like e.g. the :doc:`"copy" ones </animation/constraints/transform/copy_location>`).
msgid "Constraints are a way to control an object's properties (e.g. its location, rotation, scale), using either plain static values (like the :doc:`\"limit\" ones </animation/constraints/transform/limit_location>`), or another object, called \"target\" (like e.g. the :doc:`\"copy\" ones </animation/constraints/transform/copy_location>`)."
msgstr "Constraints are a way to control an object's properties (e.g. its location, rotation, scale), using either plain static values (like the :doc:`\"limit\" ones </rigging/constraints/transform/limit_location>`), or another object, called \"target\" (like e.g. the :doc:`\"copy\" ones </rigging/constraints/transform/copy_location>`)."

msgid "Even though constraints are useful in static projects, their main usage is obviously in animation."
msgstr "Even though constraints are useful in static projects, their main usage is obviously in animation."

msgid "You can control an object's animation through the targets used by its constraints (this is a form of indirect animation). Indeed, these targets can then control the constraint's owner's properties, and hence, animating the targets will indirectly animate the owner."
msgstr "You can control an object's animation through the targets used by its constraints (this is a form of indirect animation). Indeed, these targets can then control the constraint's owner's properties, and hence, animating the targets will indirectly animate the owner."

msgid "You can animate constraints' settings. e.g. the *Influence* or when using an armature's bone as target, animate where along this bone (between root and tip) lays the real target point."
msgstr "You can animate constraints' settings. e.g. the *Tác Động/Ảnh Hưởng -- Influence* or when using an armature's bone as target, animate where along this bone (between root and tip) lays the real target point."

msgid "They can make the eyes of a tennis player track a tennis ball bouncing across the court, allow the wheels on a bus to all rotate together, help a dinosaur's legs bend at the knee automatically, and make it easy for a hand to grip the hilt of a sword and the sword to swing with the hand."
msgstr "They can make the eyes of a tennis player track a tennis ball bouncing across the court, allow the wheels on a bus to all rotate together, help a dinosaur's legs bend at the knee automatically, and make it easy for a hand to grip the hilt of a sword and the sword to swing with the hand."

# Constraints, in Blender, work with :term:`Objects <Object>` and :term:`Bones <Bone>`. Read about using constraints in rigging in the :doc:`Armature chapter </animation/armatures/posing/bone_constraints/index>`.
msgid "Constraints, in Blender, work with :term:`Objects <Object>` and :term:`Bones <Bone>`. Read about using constraints in rigging in the :doc:`Armature chapter </animation/armatures/posing/bone_constraints/index>`."
msgstr "Constraints, in Blender, work with :term:`Objects <Object>` and :term:`Bones <Bone>`. Read about using constraints in rigging in the :doc:`Armature chapter </rigging/armatures/posing/bone_constraints/index>`."

# Vật Thểể
msgid "Object"
msgstr "Vật Thể"

# Xươngg
msgid "Bone"
msgstr "Xương"

msgid "The Constraint Stack is evaluated from top to bottom."
msgstr "The Constraint Stack is evaluated from top to bottom."

msgid "Constraints work in combination with each other to form a Constraint Stack."
msgstr "Constraints work in combination with each other to form a Constraint Stack."

# Ngọn -- Tips
msgid "Tips"
msgstr "Ngọn"

msgid "Constraints are a fantastic way to add sophistication and complexity to a rig."
msgstr "Constraints are a fantastic way to add sophistication and complexity to a rig."

msgid "But be careful not to rush in too quickly, piling up constraint upon constraint until you lose all sense of how they interact with each other."
msgstr "But be careful not to rush in too quickly, piling up constraint upon constraint until you lose all sense of how they interact with each other."

# Start simply. Get to know a single constraint inside and out. :doc:`/animation/constraints/transform/copy_location` is a good first constraint to explore it also has an animation example. Take the time to understand every fundamental concept behind it, and the other constraints will make far more senseSao Chép Vị Trí Ràng Buộc -- Copy Location Constraintow a single constraint inside and out. :doc:`/animation/constraints/transform/copy_location` is a good first constraint to explore it also has an animation example. Take the time to understand every fundamental concept behind it, and the other constraints will make far more sense.
msgid "Start simply. Get to know a single constraint inside and out. :doc:`/animation/constraints/transform/copy_location` is a good first constraint to explore it also has an animation example. Take the time to understand every fundamental concept behind it, and the other constraints will make far more sense."
msgstr "Start simply. Get to know a single constraint inside and out. :doc:`/rigging/constraints/transform/copy_location` is a good first constraint to explore it also has an animation example. Take the time to understand every fundamental concept behind it, and the other constraints will make far more sense."

