# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.8 Manual 2.8\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2019-12-27 20:49-0600\n"
"PO-Revision-Date: 2020-03-01 04:03+0000\n"
"Last-Translator: Hoang Duy Tran <hoangduytran1960@gmail.com>\n"
"Language: vi\n"
"Language-Team: London, UK <hoangduytran1960@gmail.com>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Editing"
msgstr "Biên Soạn -- Editing"

msgid ""
"In addition to having several meta objects in a same family, you can also"
" have several meta primitives in a single object (just add some more "
"while in Edit Mode). Each will be an element, with its own shape, editing"
" rings (in the viewport), and settings."
msgstr ""
"Vào addition tới having several siêu vật thể vật thể vào a tương "
"đồng/giống family, bạn có thể also có several siêu vật thể hình học cơ "
"bản vào a đơn/một cánh vật thể (just cộng thêm some nhiều/lớn hơn trong "
"khi vào Biên Soạn Chế Độ). Each sẽ được/là một element, với của nó của "
"bản thân/sở hữu hình dạng, biên soạn vành nhẫn (vào the cổng nhìn), và "
"sắp đặt."

msgid "Active Element"
msgstr "Phần Tử Đang Hoạt Động -- Active Element"

msgid "Reference"
msgstr "Tham Chiếu -- Reference"

msgid "Mode"
msgstr "Chế Độ -- Mode"

msgid "Edit Mode"
msgstr "Chế Độ Biên Soạn"

msgid "Panel"
msgstr "Bảng -- Panel"

msgid ":menuselection:`Properties editor --> Metaball --> Active Element`"
msgstr ""
":menuselection:`Trình Biên Soạn Tính Chất (Properties editor) --> Siêu "
"Cầu (Metaball) --> Phần Tử Đang Hoạt Động (Active Element)`"

msgid "Active Element panel."
msgstr "Bảng Phần Tử Đang Hoạt Động."

msgid "These settings apply only to the selected meta element."
msgstr ""
"Những Điều/Cái/Việc Này sắp đặt áp dụng duy/chỉ tới the cái được chọn "
"siêu vật thể element."

msgid "Type"
msgstr "Thể Loại -- Type"

msgid ""
"Changes the :doc:`primitive shape </modeling/metas/primitives>` of the "
"meta object."
msgstr ""
"Changes the :doc:`hình cơ bản hình dạng -- primitive shape "
"</modeling/metas/primitives>` of the meta object."

msgid "Stiffness"
msgstr "Độ Cứng -- Stiffness"

msgid ""
"Controls the influence range for individual meta elements, unlike "
"*Influence Threshold* which controls the influence for the entire "
":ref:`meta family <meta-ball-object-families>`. This essentially defines "
"how sensitive a meta is to being affected by other metas. With a low "
"stiffness, the meta will begin to deform from further away. A higher "
"value means the meta needs to be close to another one to begin merging. "
"The *Stiffness* is visualized by the *green ring* and can be selected and"
" :ref:`scaled <bpy.ops.transform.resize>` to also changes the *Stiffness*"
" value."
msgstr ""
"Controls the influence range for individual meta elements, unlike *Giới "
"Hạn Tác Động* which controls the influence for the entire :ref:`siêu vật "
"thể family -- meta family <meta-ball-object-families>`. This essentially "
"defines how sensitive a meta is to being affected by other metas. With a "
"low stiffness, the meta will begin to deform from further away. A higher "
"value means the meta needs to be close to another one to begin merging. "
"The *Độ Cứng* is visualized by the *lục vành đai -- green ring* and can "
"be selected and :ref:`scaled -- scaled <bpy.ops.transform.resize>` to "
"also changes the *Độ Cứng* value."

msgid ""
"To be visible, the *Stiffness* must be slightly larger than the "
"*Threshold* value."
msgstr ""
"To be visible, the *Độ Cứng* must be slightly larger than the *Ngưỡng* "
"value."

msgid "The left meta ball, has a smaller *Stiffness* value than the right one."
msgstr "The left meta ball, has a smaller *Độ Cứng* value than the right one."

msgid "Radius"
msgstr "Bán Kính -- Radius"

msgid ""
"Controls the physical size of the metaball. This works the same as "
"scaling the metaball in Object Mode. The *Radius* is visualized by the "
"*white ring* and can be selected and :ref:`scaled "
"<bpy.ops.transform.resize>` to also changes the *Radius* value."
msgstr ""
"Controls the physical size of the metaball. This works the same as "
"scaling the metaball in Object Mode. The *Bán Kính* is visualized by the "
"*màu trắng vành đai -- white ring* and can be selected and :ref:`scaled "
"-- scaled <bpy.ops.transform.resize>` to also changes the *Bán Kính* "
"value."

msgid "Negative"
msgstr "Âm -- Negative"

msgid "Controls whether the influence is *positive* or *negative*."
msgstr "Controls whether the influence is *dương* or *âm*."

msgid ""
"A *positive* influence is defined as an attraction, meaning that the "
"meshes will stretch towards each other as the *rings of influence* "
"intersect. The opposite effect would be a *negative* influence where the "
"objects repel each other."
msgstr ""
"A *dương* influence is defined as an attraction, meaning that the meshes "
"will stretch towards each other as the *vành nhẫn của tác động/ảnh hưởng "
"-- rings of influence* intersect. The opposite effect would be a *âm* "
"influence where the objects repel each other."

msgid ""
"If a metaball has *Negative* influence the meta is not visible in the 3D "
"Viewport, only the surrounding circles are shown."
msgstr ""
"If a metaball has *Âm* influence the meta is not visible in the 3D "
"Viewport, only the surrounding circles are shown."

msgid "Positive influence of three meta balls."
msgstr "Dương tác động/ảnh hưởng của ba siêu vật thể balls."

msgid ""
"Negative influence of a meta ball; the first is negative and the second "
"positive."
msgstr ""
"Âm tác động/ảnh hưởng của a siêu vật thể hình cầu; the đầu tiên/thứ nhất "
"là âm và the thứ hai dương."

msgid "Hide"
msgstr "Ẩn -- Hide"

msgid ""
"As in :ref:`object-show-hide` in Object Mode, you can hide the selected "
"meta(s), and then reveal what was hidden. This is very handy for cleaning"
" your views up a bit."
msgstr ""
"As in :ref:`object-show-hide -- object-show-hide` in Object Mode, you can"
" hide the selected meta(s), and then reveal what was hidden. This is very"
" handy for cleaning your views up a bit."

msgid ""
"Hiding a meta does not *only* hide it, but also disables it from the meta"
" computation, which will affect the final geometry."
msgstr ""
"Hiding a meta does not *duy/chỉ* hide it, but also disables it from the "
"meta computation, which will affect the final geometry."

msgid ""
"The two red and green rings always remain visible in Edit Mode, as well "
"as the select circle in Object Mode."
msgstr ""
"The hai đỏ và lục vành nhẫn luôn luôn remain hữu hình vào Biên Soạn Chế "
"Độ, tựa như well tựa như the chọn hình/vòng/tròn vào Vật Thể Chế Độ."

msgid "Deleting Elements"
msgstr "Xóa Phần Tử -- Deleting Elements"

msgid "Hotkey"
msgstr "Phím Tắt -- Hotkey"

msgid ":kbd:`X`, :kbd:`Delete`"
msgstr ":kbd:`X`, :kbd:`Xóa (Delete)`"

msgid "You can only delete the active element, no fancy options here."
msgstr "Bạn có thể duy/chỉ xóa the đang/hoạt động element, no fancy tùy chọn here."

msgid "Conversion"
msgstr "Chuyển Đổi -- Conversion"

msgid ""
"To convert the meta to a real mesh, use :ref:`object-convert-to` in "
"Object Mode."
msgstr ""
"To convert the meta to a real mesh, use :ref:`object-convert-to -- "
"object-convert-to` in Object Mode."

msgid "Object Families"
msgstr "Vật Thể Families -- Object Families"

msgid ""
"A \"family\" is a way to regroup several meta objects, producing "
"something very similar to having several metas inside the same object."
msgstr ""
"A \"family -- family\" is a way to regroup several meta objects, "
"producing something very similar to having several metas inside the same "
"object."

msgid ""
"It is defined by the left part of an object's name (the one before the "
"first dot). Remember, an object's name is the one in the *Object Name* "
"field, in most panels, **not** the *Metaball Name* field, which is the "
"meta data-block's name... For example, the *family* part of "
"\"MetaPlane.001\" is ``MetaPlane``. Each meta object in the same "
"\"family\" is associated with one another as discussed below."
msgstr ""
"It is defined by the left part of an object's name (the một trước the đầu"
" tiên/thứ nhất tích vô hướng -- the one before the first dot). Remember, "
"an object's name is the one in the *Tên Vật Thể* field, in most panels, "
"**đảo nghịch** the *Siêu Cầu Tên -- Metaball Name* field, which is the "
"meta data-block's name... For example, the *family -- family* part of "
"\"MetaPlane.001\" is ``MetaPlane -- MetaPlane``. Each meta object in the "
"same \"family -- family\" is associated with one another as discussed "
"below."

msgid "Metaball family."
msgstr "Siêu Cầu family."

msgid ""
"Families of metas are controlled by a *base* meta object which is "
"identified by an object name **without** a dot in it. For example, if we "
"have three metas called ``MetaThing``, ``MetaThing.001``, "
"``MetaThing.round``, the *base* meta object would be ``MetaThing``."
msgstr ""
"Families of metas are controlled by a *cơ sở* meta object which is "
"identified by an object name **without -- without** a dot in it. For "
"example, if we have three metas called ``MetaThing -- MetaThing``, "
"``MetaThing.001``, ``MetaThing.round``, the *cơ sở* meta object would be "
"``MetaThing -- MetaThing``."

msgid ""
"The *base* meta object determines the basis, the resolution, the "
"threshold, *and* the transformations. It also has the material and "
"texture area. In a way, the *base* meta is the \"owner\" of the other "
"metas in the family (i.e. it is as if the other metas were \"included\" "
"or joined into the base one)."
msgstr ""
"The *cơ sở* meta object determines the basis, the resolution, the "
"threshold, *và* the transformations. It also has the material and texture"
" area. In a way, the *cơ sở* meta is the \"chủ sở hữu\" of the other "
"metas in the family (i.e. it is as if the other metas were \"included -- "
"included\" or joined into the base one)."

msgid ""
"When working with multiple scenes, take care naming your meta objects so "
"the *base* is always in the same scene as other metas."
msgstr ""
"When working with multiple scenes, take care naming your meta objects so "
"the *cơ sở* is always in the same scene as other metas."

msgid ""
"Failing to do so will give confusing behaviors (like invisible meta "
"objects)."
msgstr ""
"Failing tới làm do vậy/đó sẽ give confusing behaviors (thích-giống "
"như-tương tự invisible siêu vật thể vật thể)."

msgid "Examples"
msgstr "Ví Dụ -- Examples"

msgid ""
"Fig. :ref:`fig-meta-ball-base` shows the *base* meta labeled \"B\". The "
"other two *Meta* objects are *children*. Children's selection rings are "
"always black, while the group's mesh is orange. Because the metas are "
"grouped, they form a unified mesh which can always be selected by "
"selecting the mesh of any meta in the group."
msgstr ""
"Fig. :ref:`fig-meta-ball-base -- fig-meta-ball-base` shows the *cơ sở* "
"meta labeled \"B\". The other two *Siêu Vật Thể* objects are *con cái*. "
"Children's selection rings are always black, while the group's mesh is "
"orange. Because the metas are grouped, they form a unified mesh which can"
" always be selected by selecting the mesh of any meta in the group."

msgid "Meta ball base."
msgstr "Siêu Vật Thể hình cầu cơ sở."

msgid ""
"For example, in Fig. :ref:`fig-meta-ball-base`, only the lower sphere "
"(the parent) has been selected, and you see that both the parent's mesh "
"*and* all of the children's meshes are now highlighted."
msgstr ""
"For example, in Fig. :ref:`fig-meta-ball-base -- fig-meta-ball-base`, "
"only the lower sphere (the phụ huynh -- the parent) has been selected, "
"and you see that both the parent's mesh *và* all of the children's meshes"
" are now highlighted."

msgid "Scaling the \"base\"."
msgstr "Scaling the \"cơ sở\"."

msgid ""
"The *base* meta object controls the *polygonalization* (mesh structure) "
"for the group, and as such, also controls the polygonalization for the "
"children (non-base) metas. If we transform the *base* meta, the "
"children's polygonalization changes. However, if we transform the "
"children, the polygonalization remains unchanged."
msgstr ""
"The *cơ sở* meta object controls the *đa giác hóa* (khung lưới cấu trúc "
"-- mesh structure) for the group, and as such, also controls the "
"polygonalization for the children (non-base -- non-base) metas. If we "
"transform the *cơ sở* meta, the children's polygonalization changes. "
"However, if we transform the children, the polygonalization remains "
"unchanged."

msgid ""
"This discussion of \"polygonization\" does *not* mean that the various "
"meshes do not deform towards or away from each other (meta objects always"
" influence one another in the usual way, within a same family)."
msgstr ""
"This discussion of \"đa giác hóa\" does *đảo nghịch* mean that the "
"various meshes do not deform towards or away from each other (siêu vật "
"thể vật thể luôn luôn tác động/ảnh hưởng một một cái/điều khác vào the "
"usual đường lối/phương pháp/cách, within a tương đồng/giống family -- "
"meta objects always influence one another in the usual way, within a same"
" family)."

msgid ""
"Rather, it means that the underlying mesh structure changes only when the"
" *base* object transforms. For example, if you scale the *base*, the "
"children's mesh structure changes."
msgstr ""
"Rather, it means that the underlying mesh structure changes only when the"
" *cơ sở* object transforms. For example, if you scale the *cơ sở*, the "
"children's mesh structure changes."

msgid ""
"In Fig. :ref:`fig-meta-ball-scale`, the *base* has been scaled down, "
"which has the effect of scaling the mesh structure of each of the "
"children. As you can see, the children's mesh resolution has increased, "
"while the *base* decreased. The children did *not* change size!"
msgstr ""
"In Fig. :ref:`fig-meta-ball-scale -- fig-meta-ball-scale`, the *cơ sở* "
"has been scaled down, which has the effect of scaling the mesh structure "
"of each of the children. As you can see, the children's mesh resolution "
"has increased, while the *cơ sở* decreased. The children did *đảo nghịch*"
" change size!"

