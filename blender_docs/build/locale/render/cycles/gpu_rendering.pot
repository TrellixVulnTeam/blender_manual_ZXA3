# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.83 Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.83 Manual 2.83\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-15 13:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:4
msgid "GPU Rendering"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:6
msgid ":abbr:`GPU (Graphics Processing Unit)` rendering makes it possible to use your graphics card for rendering, instead of the CPU. This can speed up rendering because modern GPUs are designed to do quite a lot of number crunching. On the other hand, they also have some limitations in rendering complex scenes, due to more limited memory, and issues with interactivity when using the same graphics card for display and rendering."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:12
msgid "To enable GPU rendering, go into the :menuselection:`Preferences --> System --> Cycles Render Devices`, and select either *CUDA*, *Optix* or *OpenCL*. Next, you must configure each scene to use GPU rendering in :menuselection:`Properties --> Render --> Device`."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:18
msgid "Supported Hardware"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:20
msgid "Blender supports different technologies to render on the GPU depending on the particular GPU manufacture."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:24
msgid "Nvidia"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:26
msgid ":abbr:`CUDA (Compute Unified Device Architecture)` and Optix are supported for GPU rendering with Nvidia graphics cards."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:31
msgid "CUDA"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:33
msgid "CUDA requires graphics cards with compute capability 3.0 and higher. To make sure your GPU is supported, see the `list of Nvidia graphics cards <https://developer.nvidia.com/cuda-gpus>`__ with the compute capabilities and supported graphics cards. CUDA GPU rendering is supported on Windows, macOS, and Linux."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:43
msgid "Optix"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:45
msgid "For RTX graphics cards with hardware ray tracing support (e.g. Turing), Optix can be used for better performance. Optix support is still experimental and does not yet support all features, see below for details."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:48
msgid "Optix requires Geforce or Quadro RTX graphics card with recent Nvidia drivers, and is supported on Windows and Linux."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:52
msgid "AMD"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:54
msgid ":abbr:`OpenCL (Open Computing Language)` is supported for GPU rendering with AMD graphics cards. Blender supports graphics cards with :abbr:`GCN (Graphics Core Next)` generation 2 and above. To make sure your GPU is supported, see the `list of GCN generations <https://en.wikipedia.org/wiki/Graphics_Core_Next#Iterations>`__ with the GCN generation and supported graphics cards."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:61
msgid "AMD OpenCL GPU rendering is supported on Windows and Linux, but not on macOS."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:65
msgid "Supported Features and Limitations"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:67
msgid "CUDA and OpenCL rendering supports all the same features as CPU rendering, except two:"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:69
msgid "Open Shading Language."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:70
msgid "Advanced volume light sampling to reduce noise."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:72
msgid "Optix support is experimental and does not yet support the following features:"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:74
msgid "Baking"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:75
msgid "Branched Path Tracing"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:76
msgid "Ambient Occlusion and Bevel shader nodes"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:77
msgid "Combined CPU + GPU rendering"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:78
msgid "Using CPU memory for bigger scenes"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:82
msgid "Frequently Asked Questions"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:85
msgid "Why is Blender unresponsive during rendering?"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:87
msgid "While a graphics card is rendering, it cannot redraw the user interface, which makes Blender unresponsive. We attempt to avoid this problem by giving back control over to the GPU as often as possible, but a completely smooth interaction cannot be guaranteed, especially on heavy scenes. This is a limitation of graphics cards for which no true solution exists, though we might be able to improve this somewhat in the future."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:93
msgid "If possible, it is best to install more than one GPU, using one for display and the other(s) for rendering."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:98
msgid "Why does a scene that renders on the CPU not render on the GPU?"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:100
msgid "There maybe be multiple causes, but the most common is that there is not enough memory on your graphics card. Typically while using GPU rendering the GPU can only use the amount of memory that is on the GPU. This is usually much smaller than the amount of system memory the CPU can access. With CUDA and Optix devices, if the GPU memory is full Blender will automatically try to use system memory. This has a performance impact, but will usually still result in a faster render than using CPU rendering. This feature does not work for OpenCL rendering."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:110
msgid "Can multiple GPUs be used for rendering?"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:112
msgid "Yes, go to :menuselection:`Preferences --> System --> Compute Device Panel`, and configure it as you desire."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:116
msgid "Would multiple GPUs increase available memory?"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:118
msgid "No, each GPU can only access its own memory."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:122
msgid "What renders faster, Nvidia or AMD, CUDA, Optix or OpenCL?"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:124
msgid "This varies depending on the hardware used. Different technologies also have different compute times depending on the scene tested. For the most up to date information on the performance of different devices, browse the `Blender Open Data <https://opendata.blender.org/>`__ resource."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:131
msgid "Error Messages"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:133
msgid "In case of problems, be sure to install the official graphics drivers from the Nvidia or AMD website, or through the package manager on Linux."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:138
msgid "Unsupported GNU version! gcc 4.7 and up are not supported!"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:140
msgid "On Linux, depending on your GCC version you might get this error. There are two possible solutions:"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:153
msgid "Use an alternate compiler"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:143
msgid "If you have an older GCC installed that is compatible with the installed CUDA toolkit version, then you can use it instead of the default compiler. This is done by setting the ``CYCLES_CUDA_EXTRA_CFLAGS`` environment variable when starting Blender."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:147
msgid "Launch Blender from the command line as follows:"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:153
msgid "(Substitute the name or path of the compatible GCC compiler)."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:161
msgid "Remove compatibility checks"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:156
msgid "If the above is unsuccessful, delete the following line in ``/usr/local/cuda/include/host_config.h``"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:163
msgid "This will allow Cycles to successfully compile the CUDA rendering kernel the first time it attempts to use your GPU for rendering. Once the kernel is built successfully, you can launch Blender as you normally would and the CUDA kernel will still be used for rendering."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:169
msgid "CUDA Error: Invalid kernel image"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:171
msgid "If you get this error on Windows 64-bit, be sure to use the 64-bit build of Blender, not the 32-bit version."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:176
msgid "CUDA Error: Kernel compilation failed"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:178
msgid "This error may happen if you have a new Nvidia graphics card that is not yet supported by the Blender version and CUDA toolkit you have installed. In this case Blender may try to dynamically build a kernel for your graphics card and fail."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:182
msgid "In this case you can:"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:184
msgid "Check if the latest Blender version (official or `experimental builds <https://builder.blender.org/download/experimental/>`__) supports your graphics card."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:187
msgid "If you build Blender yourself, try to download and install a newer CUDA developer toolkit."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:189
msgid "Normally users do not need to install the CUDA toolkit as Blender comes with precompiled kernels."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:193
msgid "CUDA Error: Out of memory"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:195
msgid "This usually means there is not enough memory to store the scene for use by the GPU."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:199
msgid "One way to reduce memory usage is by using smaller resolution textures. For example, 8k, 4k, 2k, and 1k image textures take up respectively 256MB, 64MB, 16MB and 4MB of memory."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:204
msgid "The Nvidia OpenGL driver lost connection with the display driver"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:206
msgid "If a GPU is used for both display and rendering, Windows has a limit on the time the GPU can do render computations. If you have a particularly heavy scene, Cycles can take up too much GPU time. Reducing Tile Size in the Performance panel may alleviate the issue, but the only real solution is to use separate graphics cards for display and rendering."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:212
msgid "Another solution can be to increase the time-out, although this will make the user interface less responsive when rendering heavy scenes. `Learn More Here <https://msdn.microsoft.com/en-us/Library/Windows/Hardware/ff570087%28v=vs.85%29.aspx>`__."
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:218
msgid "CUDA error: Unknown error in cuCtxSynchronize()"
msgstr ""

#: /Users/hoangduytran/blender_docs/manual/render/cycles/gpu_rendering.rst:220
msgid "An unknown error can have many causes, but one possibility is that it is a time-out. See the above answer for solutions."
msgstr ""
